package com.github.cao.awa.apsars.std;

@DoNotRefPrimary
public unique class SyncApsarsByte {
    private delegate: byte;

    public sync delegate(): byte -> this.delegate;

    public sync delegate(updatingValue: byte): byte -> this.delegate = updatingValue;

    public isMoreThan(comparingTarget: short): boolean -> this.delegate > comparingTarget;
    public isMoreThan(comparingTarget: int): boolean -> this.delegate > comparingTarget;
    public isMoreThan(comparingTarget: long): boolean -> this.delegate > comparingTarget;
    public isMoreThan(comparingTarget: float): boolean -> this.delegate > comparingTarget;
    public isMoreThan(comparingTarget: double): boolean -> this.delegate > comparingTarget;
    public isMoreThan(comparingTarget: byte): boolean -> this.delegate > comparingTarget;
    public isMoreThan(comparingTarget: char): boolean -> this.delegate > comparingTarget;
    public isMoreThan(comparingTarget: boolean): boolean -> false;

    public isLessThan(comparingTarget: short): boolean -> this.delegate < comparingTarget;
    public isLessThan(comparingTarget: int): boolean -> this.delegate < comparingTarget;
    public isLessThan(comparingTarget: long): boolean -> this.delegate < comparingTarget;
    public isLessThan(comparingTarget: float): boolean -> this.delegate < comparingTarget;
    public isLessThan(comparingTarget: double): boolean -> this.delegate < comparingTarget;
    public isLessThan(comparingTarget: byte): boolean -> this.delegate < comparingTarget;
    public isLessThan(comparingTarget: char): boolean -> this.delegate < comparingTarget;
    public isLessThan(comparingTarget: boolean): boolean -> false;

    public isEquals(comparingTarget: short): boolean -> this.delegate == comparingTarget;
    public isEquals(comparingTarget: int): boolean -> this.delegate == comparingTarget;
    public isEquals(comparingTarget: long): boolean -> this.delegate == comparingTarget;
    public isEquals(comparingTarget: float): boolean -> this.delegate == comparingTarget;
    public isEquals(comparingTarget: double): boolean -> this.delegate == comparingTarget;
    public isEquals(comparingTarget: byte): boolean -> this.delegate == comparingTarget;
    public isEquals(comparingTarget: char): boolean -> this.delegate == comparingTarget;
    public isEquals(comparingTarget: boolean): boolean -> false;
}