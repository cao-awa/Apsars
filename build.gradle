plugins {
    id 'java'
    id "com.github.ben-manes.versions" version '+'
    id 'org.jetbrains.kotlin.jvm' version '2.0.0-RC2'
    id 'org.jetbrains.kotlin.plugin.lombok' version '2.0.0-RC2'
    id 'io.freefair.lombok' version '8.6'
}

group = 'com.github.cao.awa'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

repositories {
    mavenCentral()
    maven {
        name = "GitHubPackages"
        url = "https://maven.pkg.github.com/cao-awa/Catheter"
        credentials {
            username = "cao-awa"
            password = "ghp_8yGFQIhfc0wz43ws" + "Orpdne0yOkzhN20XimQl"
        }
    }
    maven {
        name = "GitHubPackages"
        url = "https://maven.pkg.github.com/cao-awa/Sinuatum"
        credentials {
            username = "cao-awa"
            password = "ghp_8yGFQIhfc0wz43ws" + "Orpdne0yOkzhN20XimQl"
        }
    }
}

configurations {
    create("shadow")
    implementation.extendsFrom(shadow)
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'

    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'

    shadow 'com.alibaba.fastjson2:fastjson2:2.0.50'

    shadow 'org.slf4j:slf4j-api:2.1.0-alpha1'
    shadow 'org.apache.logging.log4j:log4j-slf4j2-impl:2.23.1'
    shadow 'org.apache.logging.log4j:log4j-api:2.23.1'
    shadow 'org.apache.logging.log4j:log4j-core:2.23.1'
    shadow 'commons-codec:commons-codec:1.17.0'
    shadow 'commons-logging:commons-logging:1.3.1'
    shadow 'commons-io:commons-io:2.16.1'
    shadow 'it.unimi.dsi:fastutil:8.5.13'
    shadow 'com.google.guava:guava:33.1.0-jre'

    shadow 'org.jetbrains:annotations:24.1.0'

    shadow 'org.reflections:reflections:0.10.2'

    shadow 'com.github.cao.awa:catheter:1.0.5'
    shadow 'com.github.cao.awa:sinuatum:1.0.10'

    shadow 'org.lz4:lz4-java:1.8.0'
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "utf-8"
}
tasks.withType(Javadoc).configureEach {
    options.encoding = "utf-8"
}

java {
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

// Exclude the secret private key.
// Do not remove this if you need a security anonymous handshake.
sourceSets {
    main {
        java {
            exclude "src/main/resources/secret/lilium/main/SECRET_PRIVATE"
        }
    }
}

jar {
    from("LICENSE") {

    }

    with copySpec({
        from(configurations.shadow.collect {
            it.isDirectory() ? it : zipTree(it)
        })

        duplicatesStrategy(DuplicatesStrategy.EXCLUDE)

        exclude "META-INF/BC2048KE.SF"
    })

    manifest {
        attributes(
                'Main-Class': project.main_class,
                'Multi-Release': 'true',
        )
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '21'
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = '21'
    }
}
